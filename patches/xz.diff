diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..4c6e540
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,240 @@
+cmake_minimum_required(VERSION 3.2)
+
+project(xz VERSION 5.2.4 LANGUAGES C)
+
+if(MSVC)
+  set(CMAKE_DEBUG_POSTFIX "d")
+endif()
+
+add_library(lzma
+    src/common/tuklib_cpucores.c
+    src/common/tuklib_physmem.c
+    src/liblzma/check/check.c
+    src/liblzma/check/crc32_fast.c
+    src/liblzma/check/crc32_table.c
+    src/liblzma/check/crc64_fast.c
+    src/liblzma/check/crc64_table.c
+    src/liblzma/check/sha256.c
+    src/liblzma/common/alone_decoder.c
+    src/liblzma/common/alone_encoder.c
+    src/liblzma/common/auto_decoder.c
+    src/liblzma/common/block_buffer_decoder.c
+    src/liblzma/common/block_buffer_encoder.c
+    src/liblzma/common/block_decoder.c
+    src/liblzma/common/block_encoder.c
+    src/liblzma/common/block_header_decoder.c
+    src/liblzma/common/block_header_encoder.c
+    src/liblzma/common/block_util.c
+    src/liblzma/common/common.c
+    src/liblzma/common/easy_buffer_encoder.c
+    src/liblzma/common/easy_decoder_memusage.c
+    src/liblzma/common/easy_encoder.c
+    src/liblzma/common/easy_encoder_memusage.c
+    src/liblzma/common/easy_preset.c
+    src/liblzma/common/filter_buffer_decoder.c
+    src/liblzma/common/filter_buffer_encoder.c
+    src/liblzma/common/filter_common.c
+    src/liblzma/common/filter_decoder.c
+    src/liblzma/common/filter_encoder.c
+    src/liblzma/common/filter_flags_decoder.c
+    src/liblzma/common/filter_flags_encoder.c
+    src/liblzma/common/hardware_cputhreads.c
+    src/liblzma/common/hardware_physmem.c
+    src/liblzma/common/index.c
+    src/liblzma/common/index_decoder.c
+    src/liblzma/common/index_encoder.c
+    src/liblzma/common/index_hash.c
+    src/liblzma/common/outqueue.c
+    src/liblzma/common/stream_buffer_decoder.c
+    src/liblzma/common/stream_buffer_encoder.c
+    src/liblzma/common/stream_decoder.c
+    src/liblzma/common/stream_encoder.c
+    src/liblzma/common/stream_encoder_mt.c
+    src/liblzma/common/stream_flags_common.c
+    src/liblzma/common/stream_flags_decoder.c
+    src/liblzma/common/stream_flags_encoder.c
+    src/liblzma/common/vli_decoder.c
+    src/liblzma/common/vli_encoder.c
+    src/liblzma/common/vli_size.c
+    src/liblzma/delta/delta_common.c
+    src/liblzma/delta/delta_decoder.c
+    src/liblzma/delta/delta_encoder.c
+    src/liblzma/lzma/fastpos_table.c
+    src/liblzma/lzma/lzma2_decoder.c
+    src/liblzma/lzma/lzma2_encoder.c
+    src/liblzma/lzma/lzma_decoder.c
+    src/liblzma/lzma/lzma_encoder.c
+    src/liblzma/lzma/lzma_encoder_optimum_fast.c
+    src/liblzma/lzma/lzma_encoder_optimum_normal.c
+    src/liblzma/lzma/lzma_encoder_presets.c
+    src/liblzma/lz/lz_decoder.c
+    src/liblzma/lz/lz_encoder.c
+    src/liblzma/lz/lz_encoder_mf.c
+    src/liblzma/rangecoder/price_table.c
+    src/liblzma/simple/arm.c
+    src/liblzma/simple/armthumb.c
+    src/liblzma/simple/ia64.c
+    src/liblzma/simple/powerpc.c
+    src/liblzma/simple/simple_coder.c
+    src/liblzma/simple/simple_decoder.c
+    src/liblzma/simple/simple_encoder.c
+    src/liblzma/simple/sparc.c
+    src/liblzma/simple/x86.c
+    src/common/mythread.h
+    src/common/sysdefs.h
+    src/common/tuklib_common.h
+    src/common/tuklib_config.h
+    src/common/tuklib_cpucores.h
+    src/common/tuklib_integer.h
+    src/common/tuklib_physmem.h
+    src/liblzma/api/lzma.h
+    src/liblzma/api/lzma/base.h
+    src/liblzma/api/lzma/bcj.h
+    src/liblzma/api/lzma/block.h
+    src/liblzma/api/lzma/check.h
+    src/liblzma/api/lzma/container.h
+    src/liblzma/api/lzma/delta.h
+    src/liblzma/api/lzma/filter.h
+    src/liblzma/api/lzma/hardware.h
+    src/liblzma/api/lzma/index.h
+    src/liblzma/api/lzma/index_hash.h
+    src/liblzma/api/lzma/lzma12.h
+    src/liblzma/api/lzma/stream_flags.h
+    src/liblzma/api/lzma/version.h
+    src/liblzma/api/lzma/vli.h
+    src/liblzma/check/check.h
+    src/liblzma/check/crc32_table_be.h
+    src/liblzma/check/crc32_table_le.h
+    src/liblzma/check/crc64_table_be.h
+    src/liblzma/check/crc64_table_le.h
+    src/liblzma/check/crc_macros.h
+    src/liblzma/common/alone_decoder.h
+    src/liblzma/common/block_buffer_encoder.h
+    src/liblzma/common/block_decoder.h
+    src/liblzma/common/block_encoder.h
+    src/liblzma/common/common.h
+    src/liblzma/common/easy_preset.h
+    src/liblzma/common/filter_common.h
+    src/liblzma/common/filter_decoder.h
+    src/liblzma/common/filter_encoder.h
+    src/liblzma/common/index.h
+    src/liblzma/common/index_encoder.h
+    src/liblzma/common/memcmplen.h
+    src/liblzma/common/outqueue.h
+    src/liblzma/common/stream_decoder.h
+    src/liblzma/common/stream_flags_common.h
+    src/liblzma/delta/delta_common.h
+    src/liblzma/delta/delta_decoder.h
+    src/liblzma/delta/delta_encoder.h
+    src/liblzma/delta/delta_private.h
+    src/liblzma/lzma/fastpos.h
+    src/liblzma/lzma/lzma2_decoder.h
+    src/liblzma/lzma/lzma2_encoder.h
+    src/liblzma/lzma/lzma_common.h
+    src/liblzma/lzma/lzma_decoder.h
+    src/liblzma/lzma/lzma_encoder.h
+    src/liblzma/lzma/lzma_encoder_private.h
+    src/liblzma/lz/lz_decoder.h
+    src/liblzma/lz/lz_encoder.h
+    src/liblzma/lz/lz_encoder_hash.h
+    src/liblzma/lz/lz_encoder_hash_table.h
+    src/liblzma/rangecoder/price.h
+    src/liblzma/rangecoder/range_common.h
+    src/liblzma/rangecoder/range_decoder.h
+    src/liblzma/rangecoder/range_encoder.h
+    src/liblzma/simple/simple_coder.h
+    src/liblzma/simple/simple_decoder.h
+    src/liblzma/simple/simple_encoder.h
+    src/liblzma/simple/simple_private.h
+)
+
+if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/windows/vs2019/config.h)
+  target_sources(lzma
+    PRIVATE
+    windows/vs2019/config.h
+  )
+set(WINDOWS_CONFIG_DIR ${CMAKE_CURRENT_SOURCE_DIR}/windows/vs2019/)
+elseif (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/windows/vs2017/config.h)
+  target_sources(lzma
+    PRIVATE
+    windows/vs2017/config.h
+  )
+  set(WINDOWS_CONFIG_DIR ${CMAKE_CURRENT_SOURCE_DIR}/windows/vs2017/)
+endif()
+
+target_include_directories(lzma
+  PRIVATE
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma/api>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma/check>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma/common>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma/lzma>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma/lz>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma/simple>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma/delta>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma/rangecoder>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/common>
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/common>
+  $<BUILD_INTERFACE:${WINDOWS_CONFIG_DIR}>
+  INTERFACE
+  $<INSTALL_INTERFACE:include>
+  PUBLIC
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma/api>
+)
+
+target_compile_definitions(lzma
+  PRIVATE
+  _CRT_SECURE_NO_WARNINGS
+  _CRT_STDC_NO_DEPRECATE
+  HAVE_CONFIG_H
+  INTERFACE
+  LZMA_API_CALL=
+  LZMA_API_IMPORT=
+)
+
+include(CMakePackageConfigHelpers)
+write_basic_package_version_file(
+  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config-version.cmake
+  VERSION ${PROJECT_VERSION}
+  COMPATIBILITY AnyNewerVersion
+)
+
+install(TARGETS lzma EXPORT lzma
+  RUNTIME DESTINATION bin
+  ARCHIVE DESTINATION lib
+  LIBRARY DESTINATION lib
+)
+
+if(MSVC)
+  set_target_properties(lzma PROPERTIES COMPILE_PDB_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR} COMPILE_PDB_NAME lzma COMPILE_PDB_NAME_DEBUG lzmad)
+  install(FILES ${PROJECT_BINARY_DIR}/RelWithDebInfo/lzma.pdb DESTINATION lib CONFIGURATIONS RelWithDebInfo)
+  install(FILES ${PROJECT_BINARY_DIR}/Debug/lzmad.pdb DESTINATION lib CONFIGURATIONS Debug)
+endif()
+
+install(DIRECTORY
+  ${CMAKE_CURRENT_SOURCE_DIR}/src/liblzma/api/
+  DESTINATION include
+)
+
+install(EXPORT lzma
+  FILE
+  ${PROJECT_NAME}.cmake
+  NAMESPACE
+    ${PROJECT_NAME}::
+  DESTINATION
+    lib/cmake/${PROJECT_NAME}
+)
+
+install(FILES
+  cmake/${PROJECT_NAME}-config.cmake
+  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config-version.cmake
+  DESTINATION
+    lib/cmake/${PROJECT_NAME}
+)
+
+export(TARGETS lzma
+  FILE
+  ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config.cmake
+  NAMESPACE ${PROJECT_NAME}::
+)
\ No newline at end of file
diff --git a/cmake/xz-config.cmake b/cmake/xz-config.cmake
new file mode 100644
index 0000000..7eb2ca2
--- /dev/null
+++ b/cmake/xz-config.cmake
@@ -0,0 +1 @@
+include(${CMAKE_CURRENT_LIST_DIR}/xz.cmake)
\ No newline at end of file
